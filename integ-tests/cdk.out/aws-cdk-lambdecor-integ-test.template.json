{
  "Resources": {
    "Bucket83908E77": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/Bucket/Resource"
      }
    },
    "LambdaFunctiontypeof9aa931b50ServiceRole43653991": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof9aa931b50/ServiceRole/Resource"
      }
    },
    "LambdaFunctiontypeof9aa931b509B3799D8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\n\n# this is the original native python function\ndef typeof(arg):\n  return f'({arg})({type(arg)})'\n\n# this is the CFN handler\ndef handler(event, context):\n  print(json.dumps(event))\n\n  request_type = event['RequestType']\n  props = event['ResourceProperties']\n\n  if request_type == 'Delete':\n    pass\n\n  args_prop = props.get('args', '[]')\n  kwargs_prop = props.get('kwargs', '{}')\n\n  # deserialize on input since we serialize on output\n  args = json.loads(args_prop)\n  kwargs = json.loads(kwargs_prop)\n\n  # invoke the original function with the original arguments.\n  return_value = typeof(*args, **kwargs)\n\n  return {'Data': {'Value': return_value}}\n\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctiontypeof9aa931b50ServiceRole43653991",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "MemorySize": 256,
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaFunctiontypeof9aa931b50ServiceRole43653991"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof9aa931b50/Resource"
      }
    },
    "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRole33553957": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof9aa931b50/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRoleDefaultPolicy5CFEDAFA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctiontypeof9aa931b509B3799D8",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRoleDefaultPolicy5CFEDAFA",
        "Roles": [
          {
            "Ref": "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRole33553957"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof9aa931b50/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomResourceProvidertypeof9aa931b50frameworkonEventD74623CA": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRole33553957",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof9aa931b50)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "LambdaFunctiontypeof9aa931b509B3799D8",
                "Arn"
              ]
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRoleDefaultPolicy5CFEDAFA",
        "CustomResourceProvidertypeof9aa931b50frameworkonEventServiceRole33553957"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof9aa931b50/framework-onEvent/Resource",
        "aws:asset:path": "asset.812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14",
        "aws:asset:property": "Code"
      }
    },
    "CustomResourcetypeof9aa931b50": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof9aa931b50frameworkonEventD74623CA",
            "Arn"
          ]
        },
        "args": "[\"input\"]",
        "kwargs": "{}"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResource-typeof9aa931b50/Default"
      }
    },
    "LambdaFunctiontypeof583dfcb49ServiceRole38B3DD0E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof583dfcb49/ServiceRole/Resource"
      }
    },
    "LambdaFunctiontypeof583dfcb49C9838B61": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\n\n# this is the original native python function\ndef typeof(arg):\n  return f'({arg})({type(arg)})'\n\n# this is the CFN handler\ndef handler(event, context):\n  print(json.dumps(event))\n\n  request_type = event['RequestType']\n  props = event['ResourceProperties']\n\n  if request_type == 'Delete':\n    pass\n\n  args_prop = props.get('args', '[]')\n  kwargs_prop = props.get('kwargs', '{}')\n\n  # deserialize on input since we serialize on output\n  args = json.loads(args_prop)\n  kwargs = json.loads(kwargs_prop)\n\n  # invoke the original function with the original arguments.\n  return_value = typeof(*args, **kwargs)\n\n  return {'Data': {'Value': return_value}}\n\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctiontypeof583dfcb49ServiceRole38B3DD0E",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "MemorySize": 256,
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaFunctiontypeof583dfcb49ServiceRole38B3DD0E"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof583dfcb49/Resource"
      }
    },
    "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRole6975CD65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof583dfcb49/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRoleDefaultPolicyA3404EAD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctiontypeof583dfcb49C9838B61",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRoleDefaultPolicyA3404EAD",
        "Roles": [
          {
            "Ref": "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRole6975CD65"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof583dfcb49/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomResourceProvidertypeof583dfcb49frameworkonEvent5D09585A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRole6975CD65",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof583dfcb49)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "LambdaFunctiontypeof583dfcb49C9838B61",
                "Arn"
              ]
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRoleDefaultPolicyA3404EAD",
        "CustomResourceProvidertypeof583dfcb49frameworkonEventServiceRole6975CD65"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof583dfcb49/framework-onEvent/Resource",
        "aws:asset:path": "asset.812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14",
        "aws:asset:property": "Code"
      }
    },
    "CustomResourcetypeof583dfcb49": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof583dfcb49frameworkonEvent5D09585A",
            "Arn"
          ]
        },
        "args": "[5]",
        "kwargs": "{}"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResource-typeof583dfcb49/Default"
      }
    },
    "LambdaFunctiontypeofb57b54c17ServiceRole0A7BD419": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeofb57b54c17/ServiceRole/Resource"
      }
    },
    "LambdaFunctiontypeofb57b54c177D94A48C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\n\n# this is the original native python function\ndef typeof(arg):\n  return f'({arg})({type(arg)})'\n\n# this is the CFN handler\ndef handler(event, context):\n  print(json.dumps(event))\n\n  request_type = event['RequestType']\n  props = event['ResourceProperties']\n\n  if request_type == 'Delete':\n    pass\n\n  args_prop = props.get('args', '[]')\n  kwargs_prop = props.get('kwargs', '{}')\n\n  # deserialize on input since we serialize on output\n  args = json.loads(args_prop)\n  kwargs = json.loads(kwargs_prop)\n\n  # invoke the original function with the original arguments.\n  return_value = typeof(*args, **kwargs)\n\n  return {'Data': {'Value': return_value}}\n\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctiontypeofb57b54c17ServiceRole0A7BD419",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "MemorySize": 256,
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaFunctiontypeofb57b54c17ServiceRole0A7BD419"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeofb57b54c17/Resource"
      }
    },
    "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleC62421F2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeofb57b54c17/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleDefaultPolicy5138588C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctiontypeofb57b54c177D94A48C",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleDefaultPolicy5138588C",
        "Roles": [
          {
            "Ref": "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleC62421F2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeofb57b54c17/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomResourceProvidertypeofb57b54c17frameworkonEventC745507B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleC62421F2",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeofb57b54c17)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "LambdaFunctiontypeofb57b54c177D94A48C",
                "Arn"
              ]
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleDefaultPolicy5138588C",
        "CustomResourceProvidertypeofb57b54c17frameworkonEventServiceRoleC62421F2"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeofb57b54c17/framework-onEvent/Resource",
        "aws:asset:path": "asset.812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14",
        "aws:asset:property": "Code"
      }
    },
    "CustomResourcetypeofb57b54c17": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeofb57b54c17frameworkonEventC745507B",
            "Arn"
          ]
        },
        "args": "[true]",
        "kwargs": "{}"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResource-typeofb57b54c17/Default"
      }
    },
    "LambdaFunctiontypeof4ac62e793ServiceRole874691D6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof4ac62e793/ServiceRole/Resource"
      }
    },
    "LambdaFunctiontypeof4ac62e793E4FE73D2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\nimport json\n\n# this is the original native python function\ndef typeof(arg):\n  return f'({arg})({type(arg)})'\n\n# this is the CFN handler\ndef handler(event, context):\n  print(json.dumps(event))\n\n  request_type = event['RequestType']\n  props = event['ResourceProperties']\n\n  if request_type == 'Delete':\n    pass\n\n  args_prop = props.get('args', '[]')\n  kwargs_prop = props.get('kwargs', '{}')\n\n  # deserialize on input since we serialize on output\n  args = json.loads(args_prop)\n  kwargs = json.loads(kwargs_prop)\n\n  # invoke the original function with the original arguments.\n  return_value = typeof(*args, **kwargs)\n\n  return {'Data': {'Value': return_value}}\n\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LambdaFunctiontypeof4ac62e793ServiceRole874691D6",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "MemorySize": 256,
        "Timeout": 900
      },
      "DependsOn": [
        "LambdaFunctiontypeof4ac62e793ServiceRole874691D6"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/LambdaFunction-typeof4ac62e793/Resource"
      }
    },
    "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRole4A24E5E8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof4ac62e793/framework-onEvent/ServiceRole/Resource"
      }
    },
    "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRoleDefaultPolicy81D30C26": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "LambdaFunctiontypeof4ac62e793E4FE73D2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRoleDefaultPolicy81D30C26",
        "Roles": [
          {
            "Ref": "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRole4A24E5E8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof4ac62e793/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomResourceProvidertypeof4ac62e793frameworkonEventB825DBE6": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRole4A24E5E8",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Description": "AWS CDK resource provider framework - onEvent (aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof4ac62e793)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "LambdaFunctiontypeof4ac62e793E4FE73D2",
                "Arn"
              ]
            }
          }
        },
        "Timeout": 900
      },
      "DependsOn": [
        "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRoleDefaultPolicy81D30C26",
        "CustomResourceProvidertypeof4ac62e793frameworkonEventServiceRole4A24E5E8"
      ],
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResourceProvider-typeof4ac62e793/framework-onEvent/Resource",
        "aws:asset:path": "asset.812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14",
        "aws:asset:property": "Code"
      }
    },
    "CustomResourcetypeof4ac62e793": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomResourceProvidertypeof4ac62e793frameworkonEventB825DBE6",
            "Arn"
          ]
        },
        "args": {
          "Fn::Join": [
            "",
            [
              "[\"",
              {
                "Ref": "Bucket83908E77"
              },
              "\"]"
            ]
          ]
        },
        "kwargs": "{}"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "aws-cdk-lambdecor-integ-test/CustomResource-typeof4ac62e793/Default"
      }
    }
  },
  "Parameters": {
    "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3BucketE74F71F4": {
      "Type": "String",
      "Description": "S3 bucket for asset \"812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14\""
    },
    "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14S3VersionKeyCDA54A41": {
      "Type": "String",
      "Description": "S3 key for asset version \"812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14\""
    },
    "AssetParameters812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14ArtifactHash47216AA1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"812fb1ad6d57643790c0c720ff7b1226e49679db821db771446a9a950a477b14\""
    }
  },
  "Outputs": {
    "String": {
      "Value": {
        "Fn::GetAtt": [
          "CustomResourcetypeof9aa931b50",
          "Value"
        ]
      }
    },
    "Integer": {
      "Value": {
        "Fn::GetAtt": [
          "CustomResourcetypeof583dfcb49",
          "Value"
        ]
      }
    },
    "Boolean": {
      "Value": {
        "Fn::GetAtt": [
          "CustomResourcetypeofb57b54c17",
          "Value"
        ]
      }
    },
    "TokenString": {
      "Value": {
        "Fn::GetAtt": [
          "CustomResourcetypeof4ac62e793",
          "Value"
        ]
      }
    }
  }
}